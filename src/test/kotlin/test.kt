import com.fasterxml.jackson.databind.JavaType
import com.fasterxml.jackson.module.kotlin.jacksonObjectMapper
import com.fasterxml.jackson.module.kotlin.readValue
import java.io.File
import java.io.FileInputStream
import java.lang.StringBuilder
import java.nio.file.FileSystems
import java.nio.file.Files
import kotlin.streams.toList

fun main(args: Array<String>) {
    val shopcartGoodsIds = listOf

    val fileSystem = FileSystems.getDefault()
    val stringBuilder = StringBuilder()
    Files.newBufferedReader(fileSystem.getPath("O:\\goods.json")).use {
        it.lines()
                .peek { line -> stringBuilder.append(line).append(System.lineSeparator()) }
                .toList()
    }
    println("shopcartGoodsIds.size=${shopcartGoodsIds.size}")

    val dataBean = JsonUtils.deserialize<DataBean>(stringBuilder.toString())
    val a =shopcartGoodsIds - dataBean!!.data!!.map { it.goodsId }
    println(a)
}

class DataBean(){
    var data:List<Goods>    ?= null
}

class Goods(){
    var goodsId:Long? = null
}
